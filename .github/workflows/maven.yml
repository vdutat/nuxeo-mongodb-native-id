# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: maven-settings
      uses: s4u/maven-settings-action@v2
      with:
        servers: '[{"id": "nuxeo-studio", "username": "${{secrets.STUDIO_LOGIN}}", "password": "${{secrets.STUDIO_TOKEN}}"}, {"id": "maven-public", "username": "${{secrets.MAVEN_PRIVATE_LOGIN}}", "password": "${{secrets.MAVEN_PRIVATE_PASSWORD}}"}, {"id": "maven-internal", "username": "${{secrets.MAVEN_PRIVATE_LOGIN}}", "password": "${{secrets.MAVEN_PRIVATE_PASSWORD}}"}]'
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipDocker
    - name: Save artifact
      run: mkdir staging && cp nuxeo-mongodb-native-id-package/target/nuxeo-mongodb-native-id-package*.zip staging
    - name: Persist artifact  
      uses: actions/upload-artifact@v1
      with:
        name: nuxeo-mongodb-native-id-package
        path: staging
